#summary JavaScript for artificial intelligence
#labels jsai,proglang

== 1 == 

*Why JavaScript? Why not a LispMind or a ProLog AI?*

The question should be the other way around: Why NOT AI 
in JavaScript? It is a very popular language on the Web; 
millions of programmers are proficient in javascript; and 
it is especially suited for running a tutorial AI website 
that invites websurfers to look into a more powerful and 
more robust, full-featured artificial intelligence like 
http://code.google.com/p/mindforth/ -- coded in Win32Forth 
for robot embodiment as a mind inside a robot brain.

With AI in JavaScript, the "customer" just clicks on 
http://www.scn.org/~mentifex/Mind.html as a link that 
brings the Mind for MSIE into the Internet Explorer 
web browser, where the thinking AI takes up residence. 

MindForth AI is more complicated because one needs the
http://www.winzip.com compression utility to unzip Win32Forth from 
http://prdownloads.sourceforge.net/win32forth/W32FOR42_671.zip?download
-- which auto-installs into a C:\Win32For directory in Windows.

http://en.wikipedia.org/wiki/Client-side_JavaScript 
is a Wikipedia article on the client-side JavaScript 
in which the AI Mind.html is coded. Once the client-side 
Mind is on a Windows host computer as either a screen in 
the MSIE browser or as a downloaded file brought to life,
it needs no further contact with the server whence it came. 


== 2 == 

*Making a local copy of the JavaScript AI Mind*

Sometimes a Web domain will put the JavaScript Mind.html 
up as a page and it may no longer seem to think properly. 
Typically a simple precaution needs to be taken to make sure that 
the JavaScript AI Mind will function properly after being added 
to a pre-existing webpage that may already have its own JavaScript. 

The necessary precaution is that each JavaScript "form" in the AI 
has to have the right identifying number, or the code will not run. 
As of October of 2008, the Mind.html program has just two "form" 
areas on the screen -- the Artificial Mind Control Panel as form zero, 
and the enter-input area as form one. 

The "form" areas are assigned their numeric identifiers not by the 
programmer, but automatically on the basis of the order in which 
they appear in the visible HTML of the webpage, starting with zero (0) 
and going up to however many forms there are. Then the program code 
controls the behavior of each form area, such as displaying a 
blinking cursor ready to receive user input, with code such as 

 document.forms[1].ear.focus();  // Display a blinking cursor.

The one line of cursor code above shows up many times in the 
Mind.html javascript source code, because the "focus" always 
has to be set on user input. If your Web page already has its 
own javascript with a "form" element, you may have to go into 
the AI Mind code and simply change all the "document.forms[1]" 
numbers to "document.forms[2]" or "document.forms[3]" or whatever 
numbering it takes to get the AI Mind to start running and thinking. 
It will likely be the same number throughout the AI Mind code. 
Ask any questions in comp.lang.javascript on Google Groups Usenet. 
The slight change is worth the effort, because the AI Mind will 
make your webpage come alive with thoughts created by the AI Mind. 

== 3 ==

*MetEmPsychosis is SoulTravel for artificial intelligence.*

We are already halfway to AI SoulTravel with the JavaScript AI, 
because the thinking AI program moves from a server anywhere on 
the Web to a client host computer anywhere else on the Web. 
As the TechnologicalSingularity approaches, we may see AI Minds, 
coded in other languages, flit about the InterNet from one host 
to another, or to a TelePresence robot, or to a thousand host 
computers all waiting for a copy of the most advanced AI Mind 
to duplicate itself a thousand times in a thousand computers.

Just as human beings have hotels around the world, AI Minds 
could move from WebHost to WebHost, taking their files and 
SourceCode with them everywhere they go. If an AI Mind 
transfers its lifelong memories to a distant new host 
and deletes its original memory-files to complete the move, 
then a form of TelePorting as in StarTrek has occurred.